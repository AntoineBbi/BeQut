# lslqmm method
tab_traj <- rbind(tab_traj,
data.frame(ID2 = unique(tmp$ID2),
intercept = lslqmm_Q1$mean$beta[1] + lslqmm_Q1$random_effect_b$postMeans[which(unique(data_plot$id) %in% ID_selec), 1],
slope = lslqmm_Q1$mean$beta[2] + lslqmm_Q1$random_effect_b$postMeans[which(unique(data_plot$id) %in% ID_selec), 2],
tau = "0.25",
method = "lslqmm"))
tab_traj <- rbind(tab_traj,
data.frame(ID2 = unique(tmp$ID2),
intercept = lslqmm_Q2$mean$beta[1] + lslqmm_Q2$random_effect_b$postMeans[which(unique(data_plot$id) %in% ID_selec), 1],
slope = lslqmm_Q2$mean$beta[2] + lslqmm_Q2$random_effect_b$postMeans[which(unique(data_plot$id) %in% ID_selec), 2],
tau = "0.5",
method = "lslqmm"))
lslqmm_Q2 <- lslqmm_median
# lqmm method
tab_traj <- data.frame(ID2 = unique(tmp$ID2),
intercept = lqmm_Q1$mean$beta[1] + lqmm_Q1$random_effect$postMeans[which(unique(data_plot$id) %in% ID_selec), 1],
slope = lqmm_Q1$mean$beta[2] + lqmm_Q1$random_effect$postMeans[which(unique(data_plot$id) %in% ID_selec), 2],
tau = "0.25",
method = "lqmm")
tab_traj <- rbind(tab_traj,
data.frame(ID2 = unique(tmp$ID2),
intercept = lqmm_Q2$mean$beta[1] + lqmm_Q2$random_effect$postMeans[which(unique(data_plot$id) %in% ID_selec), 1],
slope = lqmm_Q2$mean$beta[2] + lqmm_Q2$random_effect$postMeans[which(unique(data_plot$id) %in% ID_selec), 2],
tau = "0.5",
method = "lqmm"))
tab_traj <- rbind(tab_traj,
data.frame(ID2 = unique(tmp$ID2),
intercept = lqmm_Q3$mean$beta[1] + lqmm_Q3$random_effect$postMeans[which(unique(data_plot$id) %in% ID_selec), 1],
slope = lqmm_Q3$mean$beta[2] + lqmm_Q3$random_effect$postMeans[which(unique(data_plot$id) %in% ID_selec), 2],
tau = "0.75",
method = "lqmm"))
# lslqmm method
tab_traj <- rbind(tab_traj,
data.frame(ID2 = unique(tmp$ID2),
intercept = lslqmm_Q1$mean$beta[1] + lslqmm_Q1$random_effect_b$postMeans[which(unique(data_plot$id) %in% ID_selec), 1],
slope = lslqmm_Q1$mean$beta[2] + lslqmm_Q1$random_effect_b$postMeans[which(unique(data_plot$id) %in% ID_selec), 2],
tau = "0.25",
method = "lslqmm"))
tab_traj <- rbind(tab_traj,
data.frame(ID2 = unique(tmp$ID2),
intercept = lslqmm_Q2$mean$beta[1] + lslqmm_Q2$random_effect_b$postMeans[which(unique(data_plot$id) %in% ID_selec), 1],
slope = lslqmm_Q2$mean$beta[2] + lslqmm_Q2$random_effect_b$postMeans[which(unique(data_plot$id) %in% ID_selec), 2],
tau = "0.5",
method = "lslqmm"))
tab_traj <- rbind(tab_traj,
data.frame(ID2 = unique(tmp$ID2),
intercept = lslqmm_Q3$mean$beta[1] + lslqmm_Q3$random_effect_b$postMeans[which(unique(data_plot$id) %in% ID_selec), 1],
slope = lslqmm_Q3$mean$beta[2] + lslqmm_Q3$random_effect_b$postMeans[which(unique(data_plot$id) %in% ID_selec), 2],
tau = "0.75",
method = "lslqmm"))
p <- ggplot(tmp, aes(x = obstime, y = pressure)) +
geom_point() +
# geom_smooth(method = "lm",  formula = y ~ x + I(x^2)) +
# geom_smooth(aes(color = ID2, fill = ID2), method = "lm") +
# scale_color_viridis(discrete = TRUE, option = "D")+
# scale_fill_viridis(discrete = TRUE) +
labs(x = "Time since randomization (in years)") +
labs(y = "Systolic arterial blood pressure") +
theme_bw() +
theme(#panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
# theme_classic() +
theme(legend.position="bottom") +
facet_grid(.~ID2)
p + geom_abline(aes(intercept = intercept, slope = slope, colour = tau), tab_traj, lwd = 1) +
scale_color_viridis(discrete = TRUE, option = "D") +
facet_grid(method ~ ID2) +
# labs(color = "Quantile's order :")
labs(color = expression(paste("Quantile's order (", tau, ") :")))
p
p <- ggplot(tmp, aes(x = year, y = log(serBilir))) +
geom_point() +
# geom_smooth(method = "lm",  formula = y ~ x + I(x^2)) +
# geom_smooth(aes(color = ID2, fill = ID2), method = "lm") +
# scale_color_viridis(discrete = TRUE, option = "D")+
# scale_fill_viridis(discrete = TRUE) +
labs(x = "Time (in years)") +
labs(y = "log(serBilir)") +
theme_bw() +
theme(#panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
# theme_classic() +
theme(legend.position="bottom") +
facet_grid(.~ID2)
p + geom_abline(aes(intercept = intercept, slope = slope, colour = tau), tab_traj, lwd = 1) +
scale_color_viridis(discrete = TRUE, option = "D") +
facet_grid(method ~ ID2) +
# labs(color = "Quantile's order :")
labs(color = expression(paste("Quantile's order (", tau, ") :")))
head(unique(pbc2$id))
head(unique(as.numeric(pbc2$id)))
lqmm_Q2$mean$beta
lqmm_Q2$mean$beta + lqmm_Q2$random_effect$postMeans[3, ]
lqmm_Q2$random_effect$postMeans[3, ]
lqmm_Q2$mean$beta + lqmm_Q2$random_effect$postMeans[1:3, ]
lqmm_Q2$mean$beta + lqmm_Q2$random_effect$postMeans[1, ]
lslqmm_Q2$mean$beta + lslqmm_Q2$random_effect_b$postMeans[1, ]
lqmm_Q2$mean$beta
lslqmm_Q2$mean$beta
lqmm_Q2$random_effect$postMeans[1, ]
lslqmm_Q2$random_effect_b$postMeans[1, ]
plot(log(serBilir)~year, data = data_plot)
plot(log(serBilir)~year, data = data_plot[which(data_plot$id==1), ])
plot(log(serBilir)~year, data = data_plot[which(data_plot$id==2), ])
abline(a = lqmm_Q2$mean$beta[1], b = lqmm_Q2$mean$beta[1])
lqmm_Q2$mean$beta[1]
lqmm_Q2$random_effect$postMeans[2, ]
abline(a = lqmm_Q2$mean$beta[1] + lqmm_Q2$random_effect$postMeans[2, 1],
b = lqmm_Q2$mean$beta[2] + lqmm_Q2$random_effect$postMeans[2, 2])
i = 3
plot(log(serBilir)~year, data = data_plot[which(data_plot$id==i), ])
abline(a = lqmm_Q2$mean$beta[1] + lqmm_Q2$random_effect$postMeans[i, 1],
b = lqmm_Q2$mean$beta[2] + lqmm_Q2$random_effect$postMeans[i, 2])
lqmm_Q2$mean$beta + lqmm_Q2$random_effect$postMeans[1, ]
abline(a = lslqmm_Q2$mean$beta[1] + lslqmm_Q2$random_effect$postMeans[i, 1],
b = lslqmm_Q2$mean$beta[2] + lslqmm_Q2$random_effect$postMeans[i, 2])
abline(a = lslqmm_Q2$mean$beta[1] + lslqmm_Q2$random_effect_b$postMeans[i, 1],
b = lslqmm_Q2$mean$beta[2] + lslqmm_Q2$random_effect_b$postMeans[i, 2])
i = 3
c(lqmm_Q2$mean$beta[1] + lqmm_Q2$random_effect$postMeans[i, 1],
lqmm_Q2$mean$beta[2] + lqmm_Q2$random_effect$postMeans[i, 2])
c(lslqmm_Q2$mean$beta[1] + lslqmm_Q2$random_effect_b$postMeans[i, 1],
lslqmm_Q2$mean$beta[2] + lslqmm_Q2$random_effect_b$postMeans[i, 2])
i = 4
# individual intercept and slope for ith individual
c(lqmm_Q2$mean$beta[1] + lqmm_Q2$random_effect$postMeans[i, 1],
lqmm_Q2$mean$beta[2] + lqmm_Q2$random_effect$postMeans[i, 2])
# individual intercept and slope for ith individual
c(lslqmm_Q2$mean$beta[1] + lslqmm_Q2$random_effect_b$postMeans[i, 1],
lslqmm_Q2$mean$beta[2] + lslqmm_Q2$random_effect_b$postMeans[i, 2])
# individual intercept and slope for ith individual
trajID_lqmm_Q2 <- cbind(lqmm_Q2$mean$beta[1] + lqmm_Q2$random_effect$postMeans[, 1],
lqmm_Q2$mean$beta[2] + lqmm_Q2$random_effect$postMeans[, 2])
# individual intercept and slope for ith individual
trajID_lslqmm_Q2 <- cbind(lslqmm_Q2$mean$beta[1] + lslqmm_Q2$random_effect_b$postMeans[i, 1],
lslqmm_Q2$mean$beta[2] + lslqmm_Q2$random_effect_b$postMeans[i, 2])
head(trajID_lqmm_Q2)
head(trajID_lslqmm_Q2)
# individual intercept and slope for ith individual
trajID_lslqmm_Q2 <- cbind(lslqmm_Q2$mean$beta[1] + lslqmm_Q2$random_effect_b$postMeans[, 1],
lslqmm_Q2$mean$beta[2] + lslqmm_Q2$random_effect_b$postMeans[, 2])
head(trajID_lqmm_Q2)
head(trajID_lslqmm_Q2)
plot(trajID_lqmm_Q2~trajID_lslqmm_Q2)
abline(a = 0, b = 1, col="red")
plot(trajID_lqmm_Q2[,1]~trajID_lslqmm_Q2[,1], main = "intercept")
abline(a = 0, b = 1, col="red")
plot(trajID_lqmm_Q2[,2]~trajID_lslqmm_Q2[,2], main = "Slope")
abline(a = 0, b = 1, col="red")
pbc2$ID <- pbc2$id
pbc2$id <- as.integer(pbc2$id)
# # 5 individual plot
# set.seed(3)
# ID_selec <- sample(unique(pbc2$id), 4)
ID_selec <- c(167,198,261)
tmp <- pbc2[which(pbc2$id %in% ID_selec), ]
tmp$ID2 <- factor(tmp$ID,
levels = unique(tmp$ID),
labels = paste("Individual", ID_selec))
ggplot(tmp, aes(x = year, y = log(serBilir))) +
geom_point() +
geom_smooth(aes(color = ID2, fill = ID2), method = "lm") +
scale_color_viridis(discrete = TRUE, option = "D")+
scale_fill_viridis(discrete = TRUE) +
labs(x = "Time (in years)") +
labs(y = "log(serBilir)") +
theme_bw() +
# theme_classic() +
theme(legend.position="bottom") +
facet_grid(.~ID2)
# lqmm method
tab_traj <- data.frame(ID2 = unique(tmp$ID2),
intercept = lqmm_Q1$mean$beta[1] + lqmm_Q1$random_effect$postMeans[which(unique(data_plot$id) %in% ID_selec), 1],
slope = lqmm_Q1$mean$beta[2] + lqmm_Q1$random_effect$postMeans[which(unique(data_plot$id) %in% ID_selec), 2],
tau = "0.25",
method = "lqmm")
tab_traj <- rbind(tab_traj,
data.frame(ID2 = unique(tmp$ID2),
intercept = lqmm_Q2$mean$beta[1] + lqmm_Q2$random_effect$postMeans[which(unique(data_plot$id) %in% ID_selec), 1],
slope = lqmm_Q2$mean$beta[2] + lqmm_Q2$random_effect$postMeans[which(unique(data_plot$id) %in% ID_selec), 2],
tau = "0.5",
method = "lqmm"))
tab_traj <- rbind(tab_traj,
data.frame(ID2 = unique(tmp$ID2),
intercept = lqmm_Q3$mean$beta[1] + lqmm_Q3$random_effect$postMeans[which(unique(data_plot$id) %in% ID_selec), 1],
slope = lqmm_Q3$mean$beta[2] + lqmm_Q3$random_effect$postMeans[which(unique(data_plot$id) %in% ID_selec), 2],
tau = "0.75",
method = "lqmm"))
# lslqmm method
tab_traj <- rbind(tab_traj,
data.frame(ID2 = unique(tmp$ID2),
intercept = lslqmm_Q1$mean$beta[1] + lslqmm_Q1$random_effect_b$postMeans[which(unique(data_plot$id) %in% ID_selec), 1],
slope = lslqmm_Q1$mean$beta[2] + lslqmm_Q1$random_effect_b$postMeans[which(unique(data_plot$id) %in% ID_selec), 2],
tau = "0.25",
method = "lslqmm"))
tab_traj <- rbind(tab_traj,
data.frame(ID2 = unique(tmp$ID2),
intercept = lslqmm_Q2$mean$beta[1] + lslqmm_Q2$random_effect_b$postMeans[which(unique(data_plot$id) %in% ID_selec), 1],
slope = lslqmm_Q2$mean$beta[2] + lslqmm_Q2$random_effect_b$postMeans[which(unique(data_plot$id) %in% ID_selec), 2],
tau = "0.5",
method = "lslqmm"))
tab_traj <- rbind(tab_traj,
data.frame(ID2 = unique(tmp$ID2),
intercept = lslqmm_Q3$mean$beta[1] + lslqmm_Q3$random_effect_b$postMeans[which(unique(data_plot$id) %in% ID_selec), 1],
slope = lslqmm_Q3$mean$beta[2] + lslqmm_Q3$random_effect_b$postMeans[which(unique(data_plot$id) %in% ID_selec), 2],
tau = "0.75",
method = "lslqmm"))
p <- ggplot(tmp, aes(x = year, y = log(serBilir))) +
geom_point() +
# geom_smooth(method = "lm",  formula = y ~ x + I(x^2)) +
# geom_smooth(aes(color = ID2, fill = ID2), method = "lm") +
# scale_color_viridis(discrete = TRUE, option = "D")+
# scale_fill_viridis(discrete = TRUE) +
labs(x = "Time (in years)") +
labs(y = "log(serBilir)") +
theme_bw() +
theme(#panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
# theme_classic() +
theme(legend.position="bottom") +
facet_grid(.~ID2)
p + geom_abline(aes(intercept = intercept, slope = slope, colour = tau), tab_traj, lwd = 1) +
scale_color_viridis(discrete = TRUE, option = "D") +
facet_grid(method ~ ID2) +
# labs(color = "Quantile's order :")
labs(color = expression(paste("Quantile's order (", tau, ") :")))
# # 5 individual plot
# set.seed(3)
# ID_selec <- sample(unique(pbc2$id), 4)
ID_selec <- c(1:5)
tmp <- pbc2[which(pbc2$id %in% ID_selec), ]
tmp$ID2 <- factor(tmp$ID,
levels = unique(tmp$ID),
labels = paste("Individual", ID_selec))
ggplot(tmp, aes(x = year, y = log(serBilir))) +
geom_point() +
geom_smooth(aes(color = ID2, fill = ID2), method = "lm") +
scale_color_viridis(discrete = TRUE, option = "D")+
scale_fill_viridis(discrete = TRUE) +
labs(x = "Time (in years)") +
labs(y = "log(serBilir)") +
theme_bw() +
# theme_classic() +
theme(legend.position="bottom") +
facet_grid(.~ID2)
# lqmm method
tab_traj <- data.frame(ID2 = unique(tmp$ID2),
intercept = lqmm_Q1$mean$beta[1] + lqmm_Q1$random_effect$postMeans[which(unique(data_plot$id) %in% ID_selec), 1],
slope = lqmm_Q1$mean$beta[2] + lqmm_Q1$random_effect$postMeans[which(unique(data_plot$id) %in% ID_selec), 2],
tau = "0.25",
method = "lqmm")
tab_traj <- rbind(tab_traj,
data.frame(ID2 = unique(tmp$ID2),
intercept = lqmm_Q2$mean$beta[1] + lqmm_Q2$random_effect$postMeans[which(unique(data_plot$id) %in% ID_selec), 1],
slope = lqmm_Q2$mean$beta[2] + lqmm_Q2$random_effect$postMeans[which(unique(data_plot$id) %in% ID_selec), 2],
tau = "0.5",
method = "lqmm"))
tab_traj <- rbind(tab_traj,
data.frame(ID2 = unique(tmp$ID2),
intercept = lqmm_Q3$mean$beta[1] + lqmm_Q3$random_effect$postMeans[which(unique(data_plot$id) %in% ID_selec), 1],
slope = lqmm_Q3$mean$beta[2] + lqmm_Q3$random_effect$postMeans[which(unique(data_plot$id) %in% ID_selec), 2],
tau = "0.75",
method = "lqmm"))
# lslqmm method
tab_traj <- rbind(tab_traj,
data.frame(ID2 = unique(tmp$ID2),
intercept = lslqmm_Q1$mean$beta[1] + lslqmm_Q1$random_effect_b$postMeans[which(unique(data_plot$id) %in% ID_selec), 1],
slope = lslqmm_Q1$mean$beta[2] + lslqmm_Q1$random_effect_b$postMeans[which(unique(data_plot$id) %in% ID_selec), 2],
tau = "0.25",
method = "lslqmm"))
tab_traj <- rbind(tab_traj,
data.frame(ID2 = unique(tmp$ID2),
intercept = lslqmm_Q2$mean$beta[1] + lslqmm_Q2$random_effect_b$postMeans[which(unique(data_plot$id) %in% ID_selec), 1],
slope = lslqmm_Q2$mean$beta[2] + lslqmm_Q2$random_effect_b$postMeans[which(unique(data_plot$id) %in% ID_selec), 2],
tau = "0.5",
method = "lslqmm"))
tab_traj <- rbind(tab_traj,
data.frame(ID2 = unique(tmp$ID2),
intercept = lslqmm_Q3$mean$beta[1] + lslqmm_Q3$random_effect_b$postMeans[which(unique(data_plot$id) %in% ID_selec), 1],
slope = lslqmm_Q3$mean$beta[2] + lslqmm_Q3$random_effect_b$postMeans[which(unique(data_plot$id) %in% ID_selec), 2],
tau = "0.75",
method = "lslqmm"))
p <- ggplot(tmp, aes(x = year, y = log(serBilir))) +
geom_point() +
# geom_smooth(method = "lm",  formula = y ~ x + I(x^2)) +
# geom_smooth(aes(color = ID2, fill = ID2), method = "lm") +
# scale_color_viridis(discrete = TRUE, option = "D")+
# scale_fill_viridis(discrete = TRUE) +
labs(x = "Time (in years)") +
labs(y = "log(serBilir)") +
theme_bw() +
theme(#panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
# theme_classic() +
theme(legend.position="bottom") +
facet_grid(.~ID2)
p + geom_abline(aes(intercept = intercept, slope = slope, colour = tau), tab_traj, lwd = 1) +
scale_color_viridis(discrete = TRUE, option = "D") +
facet_grid(method ~ ID2) +
# labs(color = "Quantile's order :")
labs(color = expression(paste("Quantile's order (", tau, ") :")))
# # 5 individual plot
# set.seed(3)
# ID_selec <- sample(unique(pbc2$id), 4)
ID_selec <- c(1:10)
tmp <- pbc2[which(pbc2$id %in% ID_selec), ]
tmp$ID2 <- factor(tmp$ID,
levels = unique(tmp$ID),
labels = paste("Individual", ID_selec))
ggplot(tmp, aes(x = year, y = log(serBilir))) +
geom_point() +
geom_smooth(aes(color = ID2, fill = ID2), method = "lm") +
scale_color_viridis(discrete = TRUE, option = "D")+
scale_fill_viridis(discrete = TRUE) +
labs(x = "Time (in years)") +
labs(y = "log(serBilir)") +
theme_bw() +
# theme_classic() +
theme(legend.position="bottom") +
facet_grid(.~ID2)
lqmm_Q2 <- lqmm_median
lslqmm_Q2 <- lslqmm_median
data_plot <- pbc2
# lqmm method
tab_traj <- data.frame(ID2 = unique(tmp$ID2),
intercept = lqmm_Q1$mean$beta[1] + lqmm_Q1$random_effect$postMeans[which(unique(data_plot$id) %in% ID_selec), 1],
slope = lqmm_Q1$mean$beta[2] + lqmm_Q1$random_effect$postMeans[which(unique(data_plot$id) %in% ID_selec), 2],
tau = "0.25",
method = "lqmm")
tab_traj <- rbind(tab_traj,
data.frame(ID2 = unique(tmp$ID2),
intercept = lqmm_Q2$mean$beta[1] + lqmm_Q2$random_effect$postMeans[which(unique(data_plot$id) %in% ID_selec), 1],
slope = lqmm_Q2$mean$beta[2] + lqmm_Q2$random_effect$postMeans[which(unique(data_plot$id) %in% ID_selec), 2],
tau = "0.5",
method = "lqmm"))
tab_traj <- rbind(tab_traj,
data.frame(ID2 = unique(tmp$ID2),
intercept = lqmm_Q3$mean$beta[1] + lqmm_Q3$random_effect$postMeans[which(unique(data_plot$id) %in% ID_selec), 1],
slope = lqmm_Q3$mean$beta[2] + lqmm_Q3$random_effect$postMeans[which(unique(data_plot$id) %in% ID_selec), 2],
tau = "0.75",
method = "lqmm"))
# lslqmm method
tab_traj <- rbind(tab_traj,
data.frame(ID2 = unique(tmp$ID2),
intercept = lslqmm_Q1$mean$beta[1] + lslqmm_Q1$random_effect_b$postMeans[which(unique(data_plot$id) %in% ID_selec), 1],
slope = lslqmm_Q1$mean$beta[2] + lslqmm_Q1$random_effect_b$postMeans[which(unique(data_plot$id) %in% ID_selec), 2],
tau = "0.25",
method = "lslqmm"))
tab_traj <- rbind(tab_traj,
data.frame(ID2 = unique(tmp$ID2),
intercept = lslqmm_Q2$mean$beta[1] + lslqmm_Q2$random_effect_b$postMeans[which(unique(data_plot$id) %in% ID_selec), 1],
slope = lslqmm_Q2$mean$beta[2] + lslqmm_Q2$random_effect_b$postMeans[which(unique(data_plot$id) %in% ID_selec), 2],
tau = "0.5",
method = "lslqmm"))
tab_traj <- rbind(tab_traj,
data.frame(ID2 = unique(tmp$ID2),
intercept = lslqmm_Q3$mean$beta[1] + lslqmm_Q3$random_effect_b$postMeans[which(unique(data_plot$id) %in% ID_selec), 1],
slope = lslqmm_Q3$mean$beta[2] + lslqmm_Q3$random_effect_b$postMeans[which(unique(data_plot$id) %in% ID_selec), 2],
tau = "0.75",
method = "lslqmm"))
p <- ggplot(tmp, aes(x = year, y = log(serBilir))) +
geom_point() +
# geom_smooth(method = "lm",  formula = y ~ x + I(x^2)) +
# geom_smooth(aes(color = ID2, fill = ID2), method = "lm") +
# scale_color_viridis(discrete = TRUE, option = "D")+
# scale_fill_viridis(discrete = TRUE) +
labs(x = "Time (in years)") +
labs(y = "log(serBilir)") +
theme_bw() +
theme(#panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
# theme_classic() +
theme(legend.position="bottom") +
facet_grid(.~ID2)
p + geom_abline(aes(intercept = intercept, slope = slope, colour = tau), tab_traj, lwd = 1) +
scale_color_viridis(discrete = TRUE, option = "D") +
facet_grid(method ~ ID2) +
# labs(color = "Quantile's order :")
labs(color = expression(paste("Quantile's order (", tau, ") :")))
View(initial.values)
View(pbc2)
View(data_long)
p <- ggplot(tmp, aes(x = year, y = (serBilir))) +
geom_point() +
# geom_smooth(method = "lm",  formula = y ~ x + I(x^2)) +
# geom_smooth(aes(color = ID2, fill = ID2), method = "lm") +
# scale_color_viridis(discrete = TRUE, option = "D")+
# scale_fill_viridis(discrete = TRUE) +
labs(x = "Time (in years)") +
labs(y = "log(serBilir)") +
theme_bw() +
theme(#panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
# theme_classic() +
theme(legend.position="bottom") +
facet_grid(.~ID2)
p + geom_abline(aes(intercept = intercept, slope = slope, colour = tau), tab_traj, lwd = 1) +
scale_color_viridis(discrete = TRUE, option = "D") +
facet_grid(method ~ ID2) +
# labs(color = "Quantile's order :")
labs(color = expression(paste("Quantile's order (", tau, ") :")))
# # 5 individual plot
# set.seed(3)
# ID_selec <- sample(unique(pbc2$id), 4)
ID_selec <- c(167,198,261)
tmp <- pbc2[which(pbc2$id %in% ID_selec), ]
tmp$ID2 <- factor(tmp$ID,
levels = unique(tmp$ID),
labels = paste("Individual", ID_selec))
ggplot(tmp, aes(x = year, y = (serBilir))) +
geom_point() +
geom_smooth(aes(color = ID2, fill = ID2), method = "lm") +
scale_color_viridis(discrete = TRUE, option = "D")+
scale_fill_viridis(discrete = TRUE) +
labs(x = "Time (in years)") +
labs(y = "log(serBilir)") +
theme_bw() +
# theme_classic() +
theme(legend.position="bottom") +
facet_grid(.~ID2)
# lqmm method
tab_traj <- data.frame(ID2 = unique(tmp$ID2),
intercept = lqmm_Q1$mean$beta[1] + lqmm_Q1$random_effect$postMeans[which(unique(data_plot$id) %in% ID_selec), 1],
slope = lqmm_Q1$mean$beta[2] + lqmm_Q1$random_effect$postMeans[which(unique(data_plot$id) %in% ID_selec), 2],
tau = "0.25",
method = "lqmm")
tab_traj <- rbind(tab_traj,
data.frame(ID2 = unique(tmp$ID2),
intercept = lqmm_Q2$mean$beta[1] + lqmm_Q2$random_effect$postMeans[which(unique(data_plot$id) %in% ID_selec), 1],
slope = lqmm_Q2$mean$beta[2] + lqmm_Q2$random_effect$postMeans[which(unique(data_plot$id) %in% ID_selec), 2],
tau = "0.5",
method = "lqmm"))
tab_traj <- rbind(tab_traj,
data.frame(ID2 = unique(tmp$ID2),
intercept = lqmm_Q3$mean$beta[1] + lqmm_Q3$random_effect$postMeans[which(unique(data_plot$id) %in% ID_selec), 1],
slope = lqmm_Q3$mean$beta[2] + lqmm_Q3$random_effect$postMeans[which(unique(data_plot$id) %in% ID_selec), 2],
tau = "0.75",
method = "lqmm"))
# lslqmm method
tab_traj <- rbind(tab_traj,
data.frame(ID2 = unique(tmp$ID2),
intercept = lslqmm_Q1$mean$beta[1] + lslqmm_Q1$random_effect_b$postMeans[which(unique(data_plot$id) %in% ID_selec), 1],
slope = lslqmm_Q1$mean$beta[2] + lslqmm_Q1$random_effect_b$postMeans[which(unique(data_plot$id) %in% ID_selec), 2],
tau = "0.25",
method = "lslqmm"))
tab_traj <- rbind(tab_traj,
data.frame(ID2 = unique(tmp$ID2),
intercept = lslqmm_Q2$mean$beta[1] + lslqmm_Q2$random_effect_b$postMeans[which(unique(data_plot$id) %in% ID_selec), 1],
slope = lslqmm_Q2$mean$beta[2] + lslqmm_Q2$random_effect_b$postMeans[which(unique(data_plot$id) %in% ID_selec), 2],
tau = "0.5",
method = "lslqmm"))
tab_traj <- rbind(tab_traj,
data.frame(ID2 = unique(tmp$ID2),
intercept = lslqmm_Q3$mean$beta[1] + lslqmm_Q3$random_effect_b$postMeans[which(unique(data_plot$id) %in% ID_selec), 1],
slope = lslqmm_Q3$mean$beta[2] + lslqmm_Q3$random_effect_b$postMeans[which(unique(data_plot$id) %in% ID_selec), 2],
tau = "0.75",
method = "lslqmm"))
p <- ggplot(tmp, aes(x = year, y = (serBilir))) +
geom_point() +
# geom_smooth(method = "lm",  formula = y ~ x + I(x^2)) +
# geom_smooth(aes(color = ID2, fill = ID2), method = "lm") +
# scale_color_viridis(discrete = TRUE, option = "D")+
# scale_fill_viridis(discrete = TRUE) +
labs(x = "Time (in years)") +
labs(y = "log(serBilir)") +
theme_bw() +
theme(#panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
# theme_classic() +
theme(legend.position="bottom") +
facet_grid(.~ID2)
p + geom_abline(aes(intercept = intercept, slope = slope, colour = tau), tab_traj, lwd = 1) +
scale_color_viridis(discrete = TRUE, option = "D") +
facet_grid(method ~ ID2) +
# labs(color = "Quantile's order :")
labs(color = expression(paste("Quantile's order (", tau, ") :")))
p <- ggplot(tmp, aes(x = year, y = (serBilir))) +
geom_point() +
# geom_smooth(method = "lm",  formula = y ~ x + I(x^2)) +
# geom_smooth(aes(color = ID2, fill = ID2), method = "lm") +
# scale_color_viridis(discrete = TRUE, option = "D")+
# scale_fill_viridis(discrete = TRUE) +
labs(x = "Time (in years)") +
labs(y = "serBilir") +
theme_bw() +
theme(#panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
# theme_classic() +
theme(legend.position="bottom") +
facet_grid(.~ID2)
p + geom_abline(aes(intercept = intercept, slope = slope, colour = tau), tab_traj, lwd = 1) +
scale_color_viridis(discrete = TRUE, option = "D") +
facet_grid(method ~ ID2) +
# labs(color = "Quantile's order :")
labs(color = expression(paste("Quantile's order (", tau, ") :")))
out$mean$covariance.b
solve(out$mean$covariance.b)
1/1.41
?solve
matrix(c(14,-0.3,-0.3,0.5), ncol = 2)
solve(matrix(c(14,-0.3,-0.3,0.5), ncol = 2))
1/14
solve(as.matrix(out$mean$covariance.b)))
solve(as.matrix(out$mean$covariance.b))
solve(solve(as.matrix(out$mean$covariance.b)))
358.11*1.2
19*4/3
20*4/3
20*4/3*1.25
210/8
8*20
